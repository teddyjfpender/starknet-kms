
[0m[2m[35m$[0m [2m[1mbun test[0m
[0m[1mbun test [0m[2mv1.2.14 (6a363a38)[0m
[0m
test/key-agent-base.test.ts:
[0m[32mâœ“[0m [0mKeyAgentBase (Starknet Functionality)[2m > [0mStarknet KeyAgent[2m >[0m[1m should return the correct empty knownAddresses[0m
[0m[32mâœ“[0m [0mKeyAgentBase (Starknet Functionality)[2m > [0mStarknet KeyAgent[2m >[0m[1m should return the correct empty serializableData[0m
[0m[32mâœ“[0m [0mKeyAgentBase (Starknet Functionality)[2m > [0mStarknet KeyAgent[2m >[0m[1m should derive correct key pair[0m [0m[2m[[1m1639.04ms[0m[2m][0m
[0m[32mâœ“[0m [0mKeyAgentBase (Starknet Functionality)[2m > [0mStarknet KeyAgent[2m >[0m[1m should derive correct address for account index other than 0[0m [0m[2m[[1m1555.12ms[0m[2m][0m
[0m[32mâœ“[0m [0mKeyAgentBase (Starknet Functionality)[2m > [0mStarknet KeyAgent[2m >[0m[1m should derive multiple unique key pairs for each account index and store credentials properly[0m [0m[2m[[1m3162.01ms[0m[2m][0m
[0m[33mÂ»[2m [0m[2mKeyAgentBase (Starknet Functionality)[2m > [0m[2mStarknet KeyAgent[2m >[0m[2m should export root key successfully[0m
[0m[33mÂ»[2m [0m[2mKeyAgentBase (Starknet Functionality)[2m > [0m[2mStarknet KeyAgent[2m >[0m[2m should use the generic sign<T> function for signing a transaction[0m
stealthAddress {
  [0mephemeralPrivateScalar[2m:[0m [0m[32m[0m[32m"0x18dd7534e85b8ee7abea4c162093acb9f5809b459dd38884e54c80dbe96e9"[0m[0m[0m[2m,[0m
  [0mephemeralPublicKey[2m:[0m [0m[32m[0m[32m"0x04027994a453909310f5c8338cecee936b8ef3720cda083117c6f95ed2a826609403558b45aad90b44c79ce961ebebdeab1f550975803ff7744d26502b2d839fdf"[0m[0m[0m[2m,[0m
  [0mstealthAddress[2m:[0m [0m[32m[0m[32m"0x04007c0c3e2555e9159eb1aebd6b06f0f75b9ee3628596cb57fff55d2c0a50225c0318f5ce4495baa695eaeacf35deb57409bfced7ef8ba00b92df0fee84c548f9"[0m[0m[0m[2m,[0m
}
[0m[32mâœ“[0m [0mKeyAgentBase (Starknet Functionality)[2m > [0mStarknet KeyAgent[2m >[0m[1m should derive stealth address for itself and then confirm the stealth address is owned by itself[0m [0m[2m[[1m2352.05ms[0m[2m][0m
[0m
test/keyDecryptor.test.ts:
[0m[32mâœ“[0m [0mKeyDecryptor[2m >[0m[1m decryptChildPrivateKey should decrypt properly[0m [0m[2m[[1m1551.17ms[0m[2m][0m
[0m[32mâœ“[0m [0mKeyDecryptor[2m >[0m[1m decryptSeedBytes should decrypt seed bytes properly[0m [0m[2m[[1m1559.75ms[0m[2m][0m
[0m[32mâœ“[0m [0mKeyDecryptor[2m >[0m[1m should throw an authentication error if decryption fails[0m [0m[2m[[1m778.61ms[0m[2m][0m
[0m[32mâœ“[0m [0mKeyDecryptor[2m >[0m[1m should throw an authentication error if decryption fails in decryptSeed[0m [0m[2m[[1m779.76ms[0m[2m][0m
[0m
test/starknet/key-derivation.test.ts:
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m > [0mDerive Keys From Mnemonic[2m >[0m[1m check test case from private key to expected public key[0m [0m[2m[0.84ms[0m[2m][0m
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m > [0mDerive Keys From Mnemonic[2m >[0m[1m should derive a private key from mnemonic and sign a message that can be verified[0m [0m[2m[[1m20.88ms[0m[2m][0m
{
  [0mspendingKeyPair[2m:[0m {
    [0mprivateSpendingKey[2m:[0m [0m[32m[0m[32m"0x78936b8dc426c649fccf3a9a8022b9795bdcd558dfb83956d66a25ae76992df"[0m[0m[0m[2m,[0m
    [0mpublicSpendingKey[2m:[0m [0m[32m[0m[32m"0x040426212993d56613e1886a4cbc5b58810570023581c2aab0b423277776b79d2e042168e85622280f636c3a93e92f6d9daff6e49304b1e5676203feba109944d1"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m
  [0mviewingKeyPair[2m:[0m {
    [0mprivateViewingKey[2m:[0m [0m[32m[0m[32m"0x10b05f2dd6be06a74fa51466b7a3241bcff0e3504b9ab4cfa811f4721430e3e"[0m[0m[0m[2m,[0m
    [0mpublicViewingKey[2m:[0m [0m[32m[0m[32m"0x04061cf81ed18d4d9466b86a4e7f44a4e9b5562362e60ed1d073bf10b84763fd2100bf6f13998b2477c65e55377f326dd2da1f133a1b517e7b9f6b0bba00e347e5"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m
}
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m > [0mDerive Keys From Mnemonic[2m >[0m[1m should derive a private key & viewing key from mnemonic[0m [0m[2m[5.15ms[0m[2m][0m
Alice's spend key (x)    = 0x409f01cfaf2636175b52e399becdc84eaaaa1d1e296bc2cb6ffa3a02ba81501
Alice's spend pubkey (X) = 0x04013f7c26846e08177880455552a124ae25f174234add8ab4ffa8ba9fb2b3e2ae017842c7f947381f79c4f7313f18f72625266b0b7e17cae64e81ab4b5ea3c139
Alice's view key (y)     = 0x47d81713e29ee4b34d9fee20245a4485bc9042879de27fc44fd799dde4db484
Alice's view pubkey (Y)  = 0x04037595baba7f8654fc20a9e6f052800fb5db8a6888979a897e2495ffaf9cf89a0258f59d2c7dcb04b774dc1775e97a579f158a489f4853b491fd0731d2c01f67
Bob ephemeral r          = 0x73fa6472e49d7b82c44261dbaf3cb0cfaaa2ea2344c3a3c5a880fec8eeafe24
R = r*G                  = 0x0400a5d29a68781fa86bc489c0e063093252b44fb04997f650035c5960db46751e0713396b1a836741c65d4c06fffdf72b933aa5a046d7cc48e3c7b78c57514118
Stealth address (P)      = 0x0404c141306a0522a9d3193914d9437a0cc95e122e0082fb62aadba3e698b2419f002e4d449b623a0106a21a4f9696ad8cd200daec6c16edf2d6a737dbcb16d848
Did Alice detect it?     = [0m[33mtrue[0m
Can Bob claim it?        = [0m[33mfalse[0m
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m > [0mDerive Keys From Mnemonic[2m >[0m[1m should let Bob create a stealth address for Alice, which Alice can detect[0m [0m[2m[[1m11.38ms[0m[2m][0m
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m > [0mDerive Keys From Mnemonic[2m >[0m[1m should correctly create and verify stealth addresses using deterministically derived keys[0m [0m[2m[[1m27.39ms[0m[2m][0m
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m > [0mDerive Keys From Mnemonic[2m >[0m[1m should let Bob create a credential containing his encrypted spending & viewing keys[0m [0m[2m[0.04ms[0m[2m][0m
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m > [0mDerive Keys From Mnemonic[2m >[0m[1m should replicate argent test[0m [0m[2m[[1m37.77ms[0m[2m][0m
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m >[0m[1m should create an agent with given properties[0m
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m >[0m[1m should expose serializable data[0m
[0m[32mâœ“[0m [0mStarknet InMemoryKeyAgent[2m >[0m[1m should export root private key[0m [0m[2m[[1m780.74ms[0m[2m][0m
[0m
test/starknet/signing-operations.test.ts:
[0m[32mâœ“[0m [0mDerive Keys From Mnemonic[2m >[0m[1m should derive a private key from mnemonic and sign a message that can be verified[0m [0m[2m[[1m21.00ms[0m[2m][0m
{
  [0mspendingKeyPair[2m:[0m {
    [0mprivateSpendingKey[2m:[0m [0m[32m[0m[32m"0x78936b8dc426c649fccf3a9a8022b9795bdcd558dfb83956d66a25ae76992df"[0m[0m[0m[2m,[0m
    [0mpublicSpendingKey[2m:[0m [0m[32m[0m[32m"0x426212993d56613e1886a4cbc5b58810570023581c2aab0b423277776b79d2e"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m
  [0mviewingKeyPair[2m:[0m {
    [0mprivateViewingKey[2m:[0m [0m[32m[0m[32m"0x10b05f2dd6be06a74fa51466b7a3241bcff0e3504b9ab4cfa811f4721430e3e"[0m[0m[0m[2m,[0m
    [0mpublicViewingKey[2m:[0m [0m[32m[0m[32m"0x61cf81ed18d4d9466b86a4e7f44a4e9b5562362e60ed1d073bf10b84763fd21"[0m[0m[0m[2m,[0m
  }[0m[2m,[0m
}
[0m[32mâœ“[0m [0mDerive Keys From Mnemonic[2m >[0m[1m should derive the same public key as starknet-js[0m [0m[2m[5.69ms[0m[2m][0m
Signature (r): [0m[33m2293056574926193534147339414100803236524630247540773034106576611683570015138n[0m
Signature (s): [0m[33m86560749331161305974411664092316663224160975925034754871592127750130540981n[0m
[0m[32mâœ“[0m [0mDerive Keys From Mnemonic[2m >[0m[1m should sign a message and verify it[0m [0m[2m[[1m22.16ms[0m[2m][0m

[0m[2m2 tests skipped:[0m
[0m[33mÂ»[2m [0m[2mKeyAgentBase (Starknet Functionality)[2m > [0m[2mStarknet KeyAgent[2m >[0m[2m should export root key successfully[0m
[0m[33mÂ»[2m [0m[2mKeyAgentBase (Starknet Functionality)[2m > [0m[2mStarknet KeyAgent[2m >[0m[2m should use the generic sign<T> function for signing a transaction[0m

[0m[32m 23 pass[0m
 [0m[33m2 skip[0m
[0m[2m 0 fail[0m
 42 expect() calls
Ran 25 tests across 4 files. [0m[2m[[1m27.17s[0m[2m][0m
