{"version":3,"sources":["../src/errors.ts","../src/Range.ts"],"sourcesContent":["export class InvalidStringError extends Error {\n  constructor(expectation: string) {\n    super(`Invalid string: \"${expectation}\"`)\n  }\n}\n","import { CustomError } from \"ts-custom-error\"\n\n/**\n * Base interface to model a range\n */\n\nexport interface Range<TBound> {\n  /**\n   * Inclusive\n   */\n  lowerBound?: TBound\n  /**\n   * Inclusive\n   */\n  upperBound?: TBound\n}\n\nexport class InvalidRangeError extends CustomError {\n  public constructor(message: string) {\n    super()\n    this.message = message\n  }\n}\n\nexport class OutsideRangeError<T, R> extends CustomError {\n  public constructor(\n    value: T,\n    { lowerBound, upperBound }: Range<R>,\n    description: string,\n  ) {\n    super()\n    this.message = `${description} - ${value} must be between ${lowerBound} and ${upperBound}`\n  }\n}\n\nexport const throwIfInvalidRange = <T>({\n  lowerBound,\n  upperBound,\n}: Range<T>): void => {\n  if (!lowerBound && !upperBound) {\n    throw new InvalidRangeError(\"Must provide at least one bound\")\n  }\n  if (lowerBound === upperBound) {\n    throw new InvalidRangeError(\n      `Lower bound: ${lowerBound}, cannot equal upper bound ${upperBound}`,\n    )\n  }\n  if (lowerBound && lowerBound > upperBound!) {\n    throw new InvalidRangeError(\n      `Lower bound: ${lowerBound}, cannot be larger than upper bound: ${upperBound}`,\n    )\n  }\n}\n\nexport const inRange = <T>(value: T, range: Range<T>): boolean => {\n  throwIfInvalidRange(range)\n  const { lowerBound, upperBound } = range\n  if (!lowerBound && upperBound) {\n    return value <= upperBound\n  }\n  if (lowerBound && !upperBound) {\n    return value >= lowerBound\n  }\n  return value >= lowerBound! && value <= upperBound!\n}\n\nexport const throwIfOutsideRange = <T>(\n  value: T,\n  range: Range<T>,\n  description: string,\n): void => {\n  if (!inRange(value, range)) {\n    throw new OutsideRangeError(value, range, description)\n  }\n}\n"],"mappings":";AAAO,IAAM,qBAAN,cAAiC,MAAM;AAAA,EAC5C,YAAY,aAAqB;AAC/B,UAAM,oBAAoB,WAAW,GAAG;AAAA,EAC1C;AACF;;;ACJA,SAAS,mBAAmB;AAiBrB,IAAM,oBAAN,cAAgC,YAAY;AAAA,EAC1C,YAAY,SAAiB;AAClC,UAAM;AACN,SAAK,UAAU;AAAA,EACjB;AACF;AAEO,IAAM,oBAAN,cAAsC,YAAY;AAAA,EAChD,YACL,OACA,EAAE,YAAY,WAAW,GACzB,aACA;AACA,UAAM;AACN,SAAK,UAAU,GAAG,WAAW,MAAM,KAAK,oBAAoB,UAAU,QAAQ,UAAU;AAAA,EAC1F;AACF;AAEO,IAAM,sBAAsB,CAAI;AAAA,EACrC;AAAA,EACA;AACF,MAAsB;AACpB,MAAI,CAAC,cAAc,CAAC,YAAY;AAC9B,UAAM,IAAI,kBAAkB,iCAAiC;AAAA,EAC/D;AACA,MAAI,eAAe,YAAY;AAC7B,UAAM,IAAI;AAAA,MACR,gBAAgB,UAAU,8BAA8B,UAAU;AAAA,IACpE;AAAA,EACF;AACA,MAAI,cAAc,aAAa,YAAa;AAC1C,UAAM,IAAI;AAAA,MACR,gBAAgB,UAAU,wCAAwC,UAAU;AAAA,IAC9E;AAAA,EACF;AACF;AAEO,IAAM,UAAU,CAAI,OAAU,UAA6B;AAChE,sBAAoB,KAAK;AACzB,QAAM,EAAE,YAAY,WAAW,IAAI;AACnC,MAAI,CAAC,cAAc,YAAY;AAC7B,WAAO,SAAS;AAAA,EAClB;AACA,MAAI,cAAc,CAAC,YAAY;AAC7B,WAAO,SAAS;AAAA,EAClB;AACA,SAAO,SAAS,cAAe,SAAS;AAC1C;AAEO,IAAM,sBAAsB,CACjC,OACA,OACA,gBACS;AACT,MAAI,CAAC,QAAQ,OAAO,KAAK,GAAG;AAC1B,UAAM,IAAI,kBAAkB,OAAO,OAAO,WAAW;AAAA,EACvD;AACF;","names":[]}